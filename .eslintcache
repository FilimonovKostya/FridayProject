[{"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\index.tsx":"1","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\reportWebVitals.ts":"2","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\store.ts":"3","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\App.tsx":"4","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\loginReducer.ts":"5","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\passwordReducer.ts":"6","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\registrationReducer.ts":"7","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\profileReducer.ts":"8","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\AllComponents.tsx":"9","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\NotFound\\NotFound.tsx":"10","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\NavBar\\NavBar.tsx":"11","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Login\\Login.tsx":"12","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Registration\\Registration.tsx":"13","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Profile\\Profile.tsx":"14","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Passwords\\Password.tsx":"15","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Passwords\\PasswordRecovery\\PasswordRecovery.tsx":"16","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\Input\\Input.tsx":"17","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\Button\\Button.tsx":"18","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\CheckBox\\Checkbox.tsx":"19","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\RadioInput\\RadioInput.tsx":"20","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\SelectInput\\SelectInput.tsx":"21","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\ProgressBar\\ProgressBar.tsx":"22","G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\passwordRecovery-reducer.ts":"23"},{"size":966,"mtime":1610218992008,"results":"24","hashOfConfig":"25"},{"size":440,"mtime":1610218992009,"results":"26","hashOfConfig":"25"},{"size":811,"mtime":1610225427643,"results":"27","hashOfConfig":"25"},{"size":1835,"mtime":1610229996542,"results":"28","hashOfConfig":"25"},{"size":422,"mtime":1610218992005,"results":"29","hashOfConfig":"25"},{"size":431,"mtime":1610218992005,"results":"30","hashOfConfig":"25"},{"size":443,"mtime":1610218992005,"results":"31","hashOfConfig":"25"},{"size":428,"mtime":1610218992005,"results":"32","hashOfConfig":"25"},{"size":835,"mtime":1610219159593,"results":"33","hashOfConfig":"25"},{"size":793,"mtime":1610218991995,"results":"34","hashOfConfig":"25"},{"size":1484,"mtime":1610218991995,"results":"35","hashOfConfig":"25"},{"size":257,"mtime":1610218991994,"results":"36","hashOfConfig":"25"},{"size":299,"mtime":1610219159850,"results":"37","hashOfConfig":"25"},{"size":269,"mtime":1610218991996,"results":"38","hashOfConfig":"25"},{"size":275,"mtime":1610218991996,"results":"39","hashOfConfig":"25"},{"size":1164,"mtime":1610229626400,"results":"40","hashOfConfig":"25"},{"size":626,"mtime":1610218992003,"results":"41","hashOfConfig":"25"},{"size":323,"mtime":1610218992001,"results":"42","hashOfConfig":"25"},{"size":664,"mtime":1610218992002,"results":"43","hashOfConfig":"25"},{"size":342,"mtime":1610218992004,"results":"44","hashOfConfig":"25"},{"size":731,"mtime":1610218992004,"results":"45","hashOfConfig":"25"},{"size":414,"mtime":1610218992003,"results":"46","hashOfConfig":"25"},{"size":3369,"mtime":1610229996963,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wv7cie",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\index.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\reportWebVitals.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\store.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\App.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\loginReducer.ts",[],["96","97"],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\passwordReducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\registrationReducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\profileReducer.ts",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\AllComponents.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\NotFound\\NotFound.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\NavBar\\NavBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Login\\Login.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Registration\\Registration.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Profile\\Profile.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Passwords\\Password.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\Passwords\\PasswordRecovery\\PasswordRecovery.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\Input\\Input.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\Button\\Button.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\CheckBox\\Checkbox.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\RadioInput\\RadioInput.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\SelectInput\\SelectInput.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Components\\SuperComponents\\ProgressBar\\ProgressBar.tsx",[],"G:\\00_IT\\IT_incubator\\Projects\\Friday\\FridayProject\\src\\Redux\\reducers\\passwordRecovery-reducer.ts",["98"],"import {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"../store\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport axios from \"axios\";\r\n\r\n//Action Creator type\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\n//Thunk Type\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, RootStateType, unknown, A>\r\n\r\n//Get auto types\r\nexport type InitializeStateType = typeof initializeState\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport enum ResultCodes {\r\n    Success = 0,\r\n    Error = 1,\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodes> = {\r\n    data: D\r\n    statusText: string\r\n}\r\n\r\nexport type PasswordRecoveryType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\n//Base API settings\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n})\r\n\r\nexport const recoveryAPI = {\r\n    recover(email: string) {\r\n        const promise = axiosInstance.post<APIResponseType<PasswordRecoveryType>>('/auth/forgot', {\r\n            email: email,\r\n            from: \"test-front-admin <serega.kuharionok@yandex.ru>\",\r\n            message: `<div style=\"background-color: #00ff00; padding: 15px\">\r\n                            password recovery link: \r\n                     <a href='http://localhost:3000/FridayProject#/newPassword/$token$'>Click</a>\r\n                     </div>`\r\n        })\r\n        return promise;\r\n    },\r\n}\r\n\r\nlet initializeState = {\r\n    error: '',\r\n    status: '',\r\n    isFetching: false\r\n}\r\n\r\nexport const passwordRecoveryReducer = (state: InitializeStateType = initializeState, action: ActionsType): InitializeStateType => {\r\n    switch (action.type) {\r\n        case \"FP/RECOVERY/SET-STATUS\":\r\n            return {\r\n                ...state, status: action.payload.status\r\n            }\r\n        case \"FP/RECOVERY/PROGRESS\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload.state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    setStatus: (status: string) => ({\r\n        type: 'FP/RECOVERY/SET-STATUS',\r\n        payload: {status},\r\n    } as const),\r\n    isFetching: (state: boolean) => ({\r\n        type: 'FP/RECOVERY/PROGRESS',\r\n        payload: {state},\r\n    } as const),\r\n}\r\n\r\n//Thunk\r\nexport const sendRecoveryEmail = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(actions.setStatus('Loading'))\r\n    dispatch(actions.isFetching(true))\r\n    recoveryAPI.recover(email)\r\n        .then(res => {\r\n        if (res.status === 200) {\r\n            dispatch(actions.isFetching(false))\r\n            dispatch(actions.setStatus('Message sent. Check your email'))\r\n        } else {\r\n            dispatch(actions.isFetching(false))\r\n            dispatch(actions.setStatus('Something went wrong:('))\r\n        }\r\n    })\r\n        .catch((e) => {\r\n            debugger\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(actions.isFetching(false))\r\n            dispatch(actions.setStatus(`Something went wrong:( ${error}`))\r\n        })\r\n}\r\n\r\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":22,"column":37,"nodeType":"105","messageId":"106","endLine":22,"endColumn":39},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'RC' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]