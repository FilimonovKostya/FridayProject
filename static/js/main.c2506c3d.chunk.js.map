{"version":3,"sources":["Components/Passwords/PasswordRecovery/PasswordRecovery.module.css","Components/NotFound/NotFound.module.css","Components/SuperComponents/SelectInput/SelectInput.module.css","Components/ErrorSnackBar/ErrorSnackBar.module.css","Components/SuperComponents/CheckBox/Checkbox.module.css","Components/SuperComponents/Input/Input.module.css","Components/SuperComponents/Button/Button.module.css","Components/SuperComponents/ProgressBar/ProgressBar.module.css","Components/Registration/Registration.module.css","Components/SuperComponents/RadioInput/RadioInput.module.css","Components/Login/Login.module.css","Components/Profile/Profile.module.css","Components/Passwords/ResetPassword/ResetPassword.module.css","Components/NavBar/NavBar.module.css","Components/SuperComponents/Button/Button.tsx","Components/NotFound/NotFound.tsx","Components/NavBar/NavBar.tsx","Components/SuperComponents/Input/Input.tsx","Components/SuperComponents/CheckBox/Checkbox.tsx","Components/SuperComponents/RadioInput/RadioInput.tsx","Components/SuperComponents/SelectInput/SelectInput.tsx","Components/SuperComponents/ProgressBar/ProgressBar.tsx","AllComponents.tsx","Api/api.ts","Api/api-login.ts","Redux/reducers/loginReducer.ts","Components/Login/Login.tsx","Redux/reducers/appReducer.ts","Redux/reducers/registrationReducer.ts","Api/api-regestration.ts","Components/ErrorSnackBar/ErrorSnackBar.tsx","Components/Registration/Registration.tsx","Components/Profile/Profile.tsx","Components/Passwords/ResetPassword/ResetPassword.tsx","Api/api-recovery-password.ts","Redux/reducers/passwordRecovery-reducer.ts","Components/Passwords/PasswordRecovery/PasswordRecovery.tsx","App.tsx","reportWebVitals.ts","Redux/reducers/profileReducer.ts","Redux/store.ts","index.tsx"],"names":["module","exports","Button","children","onClick","disabled","className","style","container","button","NotFound","page_404","four_zero_four_bg","heading","contant_box_404","h2","NavBar","props","header","type","openSidebarMenu","id","htmlFor","sidebarIconToggle","spinner","diagonal","part1","horizontal","part2","sidebarMenu","sidebarMenuInner","to","path","LOGIN","REG","PASS_REC","PASSWORD","PROFILE","main","center","mainInner","Input","placeholder","onChange","value","inputContainer","input","focusBorder","Checkbox","React","useState","checked","setChecked","console","log","pureMaterialCheckbox","spanClassName","RadioInput","radio","name","SelectInput","select","selectText","required","defaultValue","selectHighlight","selectBar","selectLabel","ProgressBar","progress","progressBar","width","AllComponents","instance","axios","create","withCredentials","baseURL","authAPI","email","password","rememberMe","post","initialState","user","isAuth","Login","dispatch","useDispatch","useSelector","state","login","setEmail","setPassword","setRememberMe","wrapper","e","currentTarget","display","then","response","data","payload","catch","error","message","getAuthUserData","statusResponse","setAppStatusAC","status","setAppErrorAC","isRedirect","registrationTC","regData","dataReg","res","dataAboutUser","addedUser","Object","keys","length","setRegistrationAC","in","isEmailValid","isPassValid","passwordRegExp","ErrorSnackBar","app","notification","closeNotification","text","errorMessage","close","Registration","isRedirectProfile","registration","onChangeHandlerEmail","useCallback","onChangeHandlerPassword","registrForm","statusApp","Profile","ResetPassword","recoveryAPI","from","initializeState","isFetching","actions","PasswordRecovery","setValue","passwordRecovery","s","recoveryPage","formWrapper","pageName","inner","title","recoveryForm","statusMessage","fieldBlock","btn","loginLink","ALL_COMPONENTS","App","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,aAAe,uCAAuC,YAAc,sCAAsC,SAAW,mCAAmC,MAAQ,gCAAgC,MAAQ,gCAAgC,aAAe,uCAAuC,cAAgB,wCAAwC,WAAa,qCAAqC,MAAQ,gCAAgC,IAAM,8BAA8B,UAAY,sC,mBCAlfD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,kBAAoB,oCAAoC,QAAU,0BAA0B,SAAW,2BAA2B,gBAAkB,oC,mBCA5MD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,WAAa,gCAAgC,YAAc,iCAAiC,UAAY,+BAA+B,gBAAkB,uC,mBCAhND,EAAOC,QAAU,CAAC,aAAe,oCAAoC,kBAAoB,yCAAyC,KAAO,4BAA4B,MAAQ,+B,mBCA7KD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,qBAAuB,uCAAuC,MAAQ,0B,mBCAhID,EAAOC,QAAU,CAAC,eAAiB,8BAA8B,MAAQ,qBAAqB,YAAc,2BAA2B,cAAc,6B,mBCArJD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,SAAW,8BAA8B,YAAc,iCAAiC,qBAAqB,0C,mBCA/HD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,YAAc,oC,mBCAxED,EAAOC,QAAU,CAAC,MAAQ,4B,mBCA1BD,EAAOC,QAAU,CAAC,QAAU,yB,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,iC,4DCA5BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,UAAY,0BAA0B,YAAc,4BAA4B,iBAAmB,iCAAiC,gBAAkB,gCAAgC,kBAAoB,kCAAkC,QAAU,wBAAwB,WAAa,2BAA2B,SAAW,yBAAyB,MAAQ,sBAAsB,MAAQ,wB,kHCcnaC,EAPkC,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,SAEjE,OAAO,qBAAKC,UAAWC,IAAMC,UAAtB,SACH,wBAAQF,UAAWC,IAAME,OAAQJ,SAAUA,EAAUD,QAASA,EAA9D,SAAwED,O,iBCajEO,EAjB+B,WAC1C,OAAO,yBAASJ,UAAWC,IAAMI,SAA1B,SACH,sBAAKL,UAAWC,IAAMC,UAAtB,UACI,qBAAKF,UAAWC,IAAMK,kBAAtB,SACI,oBAAIN,UAAWC,IAAMM,QAArB,mBAEJ,sBAAKP,UAAWC,IAAMO,gBAAtB,UACI,oBAAIR,UAAWC,IAAMQ,GAArB,mCAGA,4EACA,cAAC,EAAD,iC,uBCiBDC,EA5B2B,SAACC,GACvC,OAAO,sBAAKX,UAAWC,IAAMW,OAAtB,UACH,uBAAOC,KAAK,WAAWb,UAAWC,IAAMa,gBAAiBC,GAAG,oBAC5D,wBAAOC,QAAQ,kBAAkBhB,UAAWC,IAAMgB,kBAAlD,UACI,qBAAKjB,UAAS,UAAKC,IAAMiB,QAAX,YAAsBjB,IAAMkB,SAA5B,YAAwClB,IAAMmB,SAC5D,qBAAKpB,UAAS,UAAKC,IAAMiB,QAAX,YAAsBjB,IAAMoB,cAC1C,qBAAKrB,UAAS,UAAKC,IAAMiB,QAAX,YAAsBjB,IAAMkB,SAA5B,YAAwClB,IAAMqB,YAEhE,qBAAKtB,UAAWC,IAAMsB,YAAtB,SACI,qBAAIvB,UAAWC,IAAMuB,iBAArB,UACI,6BAAI,cAAC,IAAD,CAASC,GAAIC,GAAKC,MAAlB,uBACJ,6BAAI,cAAC,IAAD,CAASF,GAAIC,GAAKE,IAAlB,8BACJ,6BAAI,cAAC,IAAD,CAASH,GAAIC,GAAKG,SAAlB,kCACJ,6BAAI,cAAC,IAAD,CAASJ,GAAIC,GAAKI,SAAlB,8BACJ,6BAAI,cAAC,IAAD,CAASL,GAAIC,GAAKK,QAAlB,yBACJ,6BAAI,cAAC,IAAD,CAASN,GAAI,IAAb,qCAGZ,qBAAKzB,UAAS,UAAKC,IAAM+B,KAAX,YAAmB/B,IAAMgC,QAAvC,SACI,qBAAKjC,UAAWC,IAAMiC,kB,wBCjBrBC,EAAsC,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAAYvB,EAAyB,EAAzBA,KAAKwB,EAAoB,EAApBA,SAASC,EAAW,EAAXA,MAE3E,OAAO,sBAAKtC,UAAWC,IAAMsC,eAAtB,UACH,uBAAOvC,UAAWC,IAAMuC,MAAO3B,KAAMA,EAAMyB,MAAOA,EAAOD,SAAUA,EAAUD,YAAaA,IAC1F,sBAAMpC,UAAWC,IAAMwC,kBAIhBN,I,yBCMAO,EAjB+B,WAAO,IAAD,EAElBC,IAAMC,UAAkB,GAFN,mBAEzCC,EAFyC,KAEhCC,EAFgC,KAOhD,OAFAC,QAAQC,IAAIH,GAEL,qBAAK7C,UAAWC,IAAMC,UAAtB,SACH,wBAAOF,UAAWC,IAAMgD,qBAAxB,UACI,uBAAOpC,KAAM,WAAYb,UAAWC,IAAMuC,MAAOK,QAASA,EAASR,SANnD,kBAAMS,GAAYD,MAOlC,sBAAM7C,UAAWC,IAAMiD,cAAvB,gC,iBCHGC,EAPmC,SAACxC,GAC/C,OAAO,wBAAOX,UAAWC,IAAMmD,MAAxB,UACH,uBAAOvC,KAAK,QAAQwC,KAAK,UACzB,oD,iBCWOC,EAdqC,SAAC3C,GACjD,OAAO,sBAAKX,UAAWC,IAAMsD,OAAtB,UACH,yBAAQvD,UAAWC,IAAMuD,WAAYC,UAAQ,EAA7C,UACI,wBAAQnB,MAAM,IAAIoB,aAAc,gBAAhC,6BACA,wBAAQpB,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,yBAEJ,sBAAMtC,UAAWC,IAAM0D,kBACvB,sBAAM3D,UAAWC,IAAM2D,YACvB,uBAAO5D,UAAWC,IAAM4D,YAAxB,wB,iBCGOC,EAXgD,WAM3D,OAAO,qBAAK9D,UAAWC,IAAM8D,SAAtB,SACH,sBAAM/D,UAAWC,IAAM+D,YAAa/D,MALnB,CACjBgE,MAAO,aCWAC,EAZyC,WACpD,OAAO,sBAAKlE,UAAW,gBAAhB,UACH,cAAC,EAAD,IACA,cAAC,EAAD,yBACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,uCChBKmE,E,OAAWC,EAAMC,OAAO,CACjCC,iBAAiB,EACjBC,QAAS,+BCDAC,EAAU,SAIbC,EAAeC,EAAkBC,GACnC,OAAOR,EAASS,KAAK,aAAc,CAACH,QAAOC,WAAUC,gBCWvDE,EAAe,CACjBC,KAAM,GACNC,QAAQ,GCmBGC,EA9ByB,WACpC,IAAMC,EAAWC,cACbH,EAASI,aAAoC,SAAAC,GAAK,OAAIA,EAAMC,MAAMN,UAF5B,EAIlBnC,mBAAiB,IAJC,mBAIrC6B,EAJqC,KAI9Ba,EAJ8B,OAKZ1C,mBAAiB,IALL,mBAKrC8B,EALqC,KAK3Ba,EAL2B,OAMR3C,oBAAkB,GANV,mBAMrC+B,EANqC,KAMzBa,EANyB,KAY1C,OAAIT,EACO,cAAC,IAAD,CAAUtD,GAAI,cAElB,sBAAKzB,UAAWC,IAAMwF,QAAtB,UACH,yCACA,uBAAO5E,KAAM,QACNuB,YAAa,cACbC,SAAU,SAACqD,GAAD,OAAsCJ,EAASI,EAAEC,cAAcrD,UAChF,uBAAOzB,KAAM,WACNuB,YAAa,WACbC,SAAU,SAACqD,GAAD,OAAsCH,EAAYG,EAAEC,cAAcrD,UACnF,uBAAOrC,MAAO,CAAC2F,QAAQ,SACnB/E,KAAM,WAAYwB,SAAU,SAACqD,GAAD,OAAsCF,EAAcE,EAAEC,cAAc9C,YACpG,wBAAQ/C,QAjBS,WACjBiD,QAAQC,IAAIyB,EAAOC,EAAUC,GAC7BM,EDqBuB,SAACR,EAAeC,EAAkBC,GAAlC,OAA0D,SAACM,GACtFT,EAAcC,EAAOC,EAAUC,GAC1BkB,MAAK,SAAAC,GACE/C,QAAQC,IAAI8C,EAASC,MACrBd,EAPiD,CAACpE,KAAM,gBAAiBmF,QAO9CF,EAASC,UAE1CE,OAAM,SAACP,GACT,IAAMQ,EAAQR,EAAEI,SAAWJ,EAAEI,SAASC,KAAKG,MAAOR,EAAES,QAAQ,gCAC5DpD,QAAQC,IAAIkD,OC7BHE,CAAgB3B,EAAOC,EAAUC,KAe1C,wB,iBC1BFE,EAAiC,CACnCwB,eAAgB,OAChBH,MAAO,MAeEI,EAAiB,SAACC,GAAD,MAAgC,CAAC1F,KAAM,iBAAkB0F,WAE1EC,EAAgB,SAACN,GAAD,MAA2B,CAACrF,KAAM,gBAAiBqF,UCmB1ErB,EAAiC,CACnCH,SAAU,GACVD,MAAO,GACPgC,YAAY,GAsBHC,EAAiB,SAACC,GAAD,OAAsC,SAAC1B,GCjE/C,IAAC2B,EDkEnB3B,EAASqB,EAAe,aClELM,EDmEnB,eAAmCD,GClEpBxC,EAASS,KAAT,+BAA6DgC,KDmEvEf,MAAK,SAACgB,GACH5B,EAASqB,EAAe,cACxB,IAAMQ,EAAgBD,EAAId,KAAKgB,UAEW,KAAtCC,OAAOC,KAAKH,GAAeI,SAE3BjC,EAfiB,SAAC0B,GAAD,MAAuC,CAAC9F,KAAM,mBAAoB8F,WAe1EQ,CAAkB,eAAIR,KAC/B1B,EAd8C,CAACpE,KAAM,uBAAwB4F,YAc/C,IAC9BxB,EAASqB,EAAe,kBAG/BL,OAAM,SAACC,GACJjB,EAASqB,EAAe,YACO,eAA3BJ,EAAMJ,SAASC,KAAKqB,KACpBnC,EAASuB,EAAcN,EAAMJ,SAASC,KAAKG,QAC3CjB,EAASqB,EAAe,YAEvBJ,EAAMJ,SAASC,KAAKsB,eACrBpC,EAASuB,EAAcN,EAAMJ,SAASC,KAAKG,QAC3CjB,EAASqB,EAAe,YAEvBJ,EAAMJ,SAASC,KAAKuB,cACrBpB,EAAMJ,SAASC,KAAKwB,gBAAkBtC,EAASuB,EAAcN,EAAMJ,SAASC,KAAKwB,iBACjFtC,EAASqB,EAAe,iB,kBE3EzBkB,GAdO,SAAC7G,GACnB,IAAMsE,EAAWC,cACXgB,EAAQf,aAA0C,SAAAC,GAAK,OAAIA,EAAMqC,IAAIvB,SAI3E,OAAO,sBAAKlG,UAAWkG,EAAK,UAAMjG,KAAMyH,cAAZ,YAAkCzH,KAAM0H,mBAA7D,UACH,sBAAK3H,UAAWC,KAAM2H,KAAtB,cAA8BjH,EAAMkH,aAApC,OACA,qBAAK7H,UAAS,UAAKC,KAAM6H,OAAzB,SACI,qBAAK9H,UAAWC,KAAM2H,KAAM9H,QALb,kBAAMmF,EAASuB,EAAc,QAK5C,qBC0BGuB,GA5BuC,SAACpH,GACnD,IAAMsE,EAAWC,cAD4C,EAGnCtC,mBAAiB,6BAHkB,mBAGtD6B,EAHsD,KAG/Ca,EAH+C,OAI7B1C,mBAAiB,kBAJY,mBAItD8B,EAJsD,KAI5Ca,EAJ4C,KAKvDyC,EAAoB7C,aAAoC,SAAAC,GAAK,OAAIA,EAAM6C,aAAaxB,cACpFP,EAAQf,aAA0C,SAAAC,GAAK,OAAIA,EAAMqC,IAAIvB,SAErEgC,EAAuBC,uBAAY,SAACzC,GAAD,OAAsCJ,EAASI,EAAEC,cAAcrD,SAAQ,IAC1G8F,EAA0BD,uBAAY,SAACzC,GAAD,OAAsCH,EAAYG,EAAEC,cAAcrD,SAAQ,IAItH,OAAI0F,EACO,cAAC,IAAD,CAAUvG,GAAIC,GAAKK,UAGvB,sBAAK/B,UAAWC,IAAMwF,QAAtB,UACH,8CACCS,GAAS,cAAC,GAAD,CAAe2B,aAAc3B,IACvC,uBAAMlG,UAAWC,IAAMoI,YAAvB,UACI,cAAC,EAAD,CAAOxH,KAAM,OAAQyB,MAAOmC,EAAOpC,SAAU6F,EAAsB9F,YAAa,UAChF,cAAC,EAAD,CAAOvB,KAAM,WAAYyB,MAAOoC,EAAUrC,SAAU+F,EAAyBhG,YAAa,aAC1F,cAAC,EAAD,CAAQtC,QAZO,kBAAOmF,EAASyB,EAAe,CAACjC,QAAOC,eAYrB3E,SAA8B,YAApBY,EAAM2H,UAAjD,mC,oBC3BGC,GAN6B,WACxC,OAAO,qBAAKvI,UAAWC,KAAMwF,QAAtB,SACH,4C,oBCIO+C,GANoC,WAC/C,OAAO,qBAAKxI,UAAWC,KAAMwF,QAAtB,SACH,6CCKKgD,GAAc,SACfhE,GACJ,OAAON,EAASS,KAA4C,eAAgB,CACxEH,MAAOA,EACPiE,KAAM,iDACNvC,QAAQ,oPCDhBwC,GAAkB,CAClBpC,OAAQ,GACRqC,YAAY,GAsBVC,GACS,SAACtC,GAAD,MAAqB,CAC5B1F,KAAM,yBACNmF,QAAS,CAACO,YAHZsC,GAKU,SAACzD,GAAD,MAAqB,CAC7BvE,KAAM,uBACNmF,QAAS,CAACZ,W,oBCWH0D,GAjDoB,WAAO,IAAD,EAEXlG,mBAAiB,IAFN,mBAE9BN,EAF8B,KAEvByG,EAFuB,KAK/BxC,EAASpB,aAAmC,SAACC,GAAD,OAAWA,EAAM4D,iBAAiBzC,UAE9EqC,EAAazD,aAAoC,SAACC,GAAD,OAAWA,EAAM4D,iBAAiBJ,cAEnF3D,EAAWC,cAYjB,OACI,qBAAKlF,UAAWiJ,KAAEC,aAAlB,SACI,sBAAKlJ,UAAWiJ,KAAEE,YAAlB,UACI,oBAAInJ,UAAWiJ,KAAEG,SAAjB,+BACA,sBAAKpJ,UAAWiJ,KAAEI,MAAlB,UACI,oBAAIrJ,UAAWiJ,KAAEK,MAAjB,4BACA,sBAAKtJ,UAAWiJ,KAAEM,aAAlB,UAEQhD,GAAU,sBAAMvG,UAAWiJ,KAAEO,cAAnB,SAAmCjD,IAEjD,sBAAKvG,UAAWiJ,KAAEQ,WAAlB,UACI,uBAAO5I,KAAK,QACLyB,MAAOA,EACPtC,UAAWiJ,KAAEzG,MACbH,SAxBV,SAACqD,GAClBqD,EAASrD,EAAEC,cAAcrD,UAwBL,wBAAQxC,QArBd,WD4BW,IAAC2E,EC3B1BQ,GD2B0BR,EC3BCnC,ED2BiB,SAAC2C,GACjDA,EAAS4D,GAAkB,YAC3B5D,EAAS4D,IAAmB,IAC5BJ,GAAoBhE,GACfoB,MAAK,SAAAgB,GACa,MAAfA,EAAIN,QACJtB,EAAS4D,IAAmB,IAC5B5D,EAAS4D,GAAkB,qCAE3B5D,EAAS4D,IAAmB,IAC5B5D,EAAS4D,GAAkB,+BAG9B5C,OAAM,SAACP,GACJ,IAAMQ,EAAQR,EAAEI,SACVJ,EAAEI,SAASC,KAAKG,MACfR,EAAES,QAAU,gCACnBlB,EAAS4D,IAAmB,IAC5B5D,EAAS4D,GAAA,iCAA4C3C,WC3CzD6C,EAAS,KAmBmBhJ,SAAU6I,EACV5I,UAAWiJ,KAAES,IAFrB,kBAIA,cAAC,IAAD,CAASjI,GAAIC,GAAKC,MAAO3B,UAAWiJ,KAAEU,UAAtC,kCClCfjI,GAAO,CAChBC,MAAO,SACPC,IAAK,gBACLE,SAAU,uBACVD,SAAU,oBACVE,QAAS,WACT6H,eAAgB,kBA6BLC,OA1Bf,WAEI,IAAMvB,EAAYnD,aAA8C,SAAAC,GAAK,OAAIA,EAAMqC,IAAIpB,kBAEnF,OAAO,gCACH,cAAC,EAAD,IAEe,YAAdiC,EAA0B,cAAC,EAAD,IAAiB,KAE5C,eAAC,IAAD,WACI,cAAC,IAAD,CAAO5G,KAAM,IAAKoI,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOrI,KAAMA,GAAKC,MAAOmI,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OAC7C,cAAC,IAAD,CAAOrI,KAAMA,GAAKE,IAAKkI,OAAK,EAACC,OAAQ,kBAAM,cAAC,GAAD,CAAczB,UAAWA,OACpE,cAAC,IAAD,CAAO5G,KAAMA,GAAKI,SAAUgI,OAAK,EAACC,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,IAAD,CAAOrI,KAAMA,GAAKG,SAAUiI,OAAK,EAACC,OAAQ,kBAAM,cAAC,GAAD,OAChD,cAAC,IAAD,CAAOrI,KAAMA,GAAKK,QAAS+H,OAAK,EAACC,OAAQ,kBAAM,cAAC,GAAD,OAC/C,cAAC,IAAD,CAAOrI,KAAMA,GAAKkI,eAAgBE,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OAEtD,cAAC,IAAD,CAAOrI,KAAM,OAAQqI,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,IAAD,CAAUrB,KAAM,IAAKjH,GAAI,gBC9BtBuI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,SCTRpF,GAAiC,G,SCQjC2F,GAAcC,aAAgB,CAChCpF,MfewB,WAAoF,IAAnFD,EAAkF,uDAAxDP,EAAc6F,EAA0C,uCAC3G,OAAQA,EAAO7J,MACX,IAAK,gBACD,OAAO,2BACAuE,GADP,IAEIN,KAAM4F,EAAO1E,QACbjB,QAAQ,IAEhB,QACI,OAAOK,IevBf4D,iBLcmC,WAA6F,IAA5F5D,EAA2F,uDAA9DuD,GAAiB+B,EAA6C,uCAC/H,OAAQA,EAAO7J,MACX,IAAK,yBACD,OAAO,2BACAuE,GADP,IACcmB,OAAQmE,EAAO1E,QAAQO,SAEzC,IAAK,uBACD,OAAO,2BACAnB,GADP,IAEIwD,WAAY8B,EAAO1E,QAAQZ,QAEnC,QACI,OAAOA,IKxBf6C,aZ0C+B,WAAmE,IAAlE7C,EAAiE,uDAAzDP,EAAcgE,EAA2C,uCACjG,OAAQA,EAAQhI,MACZ,IAAK,mBACD,OAAO,2BAAIuE,GAAUyD,EAAQlC,SACjC,IAAK,uBACD,OAAO,2BAAIvB,GAAX,IAAkBqB,WAAYoC,EAAQpC,aAC1C,QACI,OAAOrB,IYhDfuF,QDX0B,WAAmE,IAAlEvF,EAAiE,uDAAzDP,GAAcgE,EAA2C,uCAC5F,OAAQA,EAAQhI,MACZ,IAAK,GAEL,QACI,OAAOuE,ICOfqC,IbAsB,WAAmE,IAAlErC,EAAiE,uDAAzDP,EAAcgE,EAA2C,uCACxF,OAAQA,EAAQhI,MACZ,IAAK,iBACD,OAAO,2BAAIuE,GAAX,IAAkBiB,eAAgBwC,EAAQtC,SAC9C,IAAK,gBACD,OAAO,2BAAInB,GAAX,IAAkBc,MAAO2C,EAAQ3C,QACrC,QACI,OAAOd,MaJNwF,GAAQC,aAAYL,GAAaM,aAAgBC,OCR9DC,IAASjB,OACL,cAAC,IAAMkB,WAAP,UAEI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,UAIZM,SAASC,eAAe,SAM5BnB,O","file":"static/js/main.c2506c3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"recoveryPage\":\"PasswordRecovery_recoveryPage__1Hnh-\",\"formWrapper\":\"PasswordRecovery_formWrapper__QLp89\",\"pageName\":\"PasswordRecovery_pageName__42Ydx\",\"inner\":\"PasswordRecovery_inner__3axqM\",\"title\":\"PasswordRecovery_title__3LTLO\",\"recoveryForm\":\"PasswordRecovery_recoveryForm__1x4wq\",\"statusMessage\":\"PasswordRecovery_statusMessage__3kF92\",\"fieldBlock\":\"PasswordRecovery_fieldBlock__1L7z6\",\"input\":\"PasswordRecovery_input__1L3cK\",\"btn\":\"PasswordRecovery_btn__1JUMI\",\"loginLink\":\"PasswordRecovery_loginLink__1moA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_404\":\"NotFound_page_404__qhGHz\",\"four_zero_four_bg\":\"NotFound_four_zero_four_bg__25Ylp\",\"heading\":\"NotFound_heading__18uTr\",\"link_404\":\"NotFound_link_404__3Mybr\",\"contant_box_404\":\"NotFound_contant_box_404__286so\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SelectInput_select__1GShe\",\"selectText\":\"SelectInput_selectText__2Z3PI\",\"selectLabel\":\"SelectInput_selectLabel__7tUqE\",\"selectBar\":\"SelectInput_selectBar__23nnp\",\"selectHighlight\":\"SelectInput_selectHighlight__2IDPT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__2FFS4\",\"closeNotification\":\"ErrorSnackBar_closeNotification__2-zPV\",\"text\":\"ErrorSnackBar_text__2fIb8\",\"close\":\"ErrorSnackBar_close__1m5uG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Checkbox_container__b_A7n\",\"pureMaterialCheckbox\":\"Checkbox_pureMaterialCheckbox__2gbpQ\",\"input\":\"Checkbox_input__14Naz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__J8BBT\",\"input\":\"Input_input__1M7MK\",\"focusBorder\":\"Input_focusBorder___XG4T\",\"has-content\":\"Input_has-content__bh1rV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__1DOlj\",\"button\":\"Button_button__1ogrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"ProgressBar_progress__38W0a\",\"progressBar\":\"ProgressBar_progressBar__2IAnU\",\"progress-animation\":\"ProgressBar_progress-animation__16CKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__WwW9I\",\"registrForm\":\"Registration_registrForm__3SmVd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"RadioInput_radio__2jCkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__cIEWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__i8quK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ResetPassword_wrapper__234R2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBar_header__Smqot\",\"mainInner\":\"NavBar_mainInner__1r1ou\",\"sidebarMenu\":\"NavBar_sidebarMenu__XVEwF\",\"sidebarMenuInner\":\"NavBar_sidebarMenuInner__2h3eI\",\"openSidebarMenu\":\"NavBar_openSidebarMenu__-av3a\",\"sidebarIconToggle\":\"NavBar_sidebarIconToggle__2gEsN\",\"spinner\":\"NavBar_spinner__3DKDP\",\"horizontal\":\"NavBar_horizontal__VfXfG\",\"diagonal\":\"NavBar_diagonal__1lAmI\",\"part1\":\"NavBar_part1__LFwLC\",\"part2\":\"NavBar_part2__1YiRb\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport style from \"./Button.module.css\";\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultInputPropsType & {}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({children,onClick, disabled}) => {\r\n\r\n    return <div className={style.container}>\r\n        <button className={style.button} disabled={disabled} onClick={onClick}>{children}</button>\r\n    </div>\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport  Button  from '../SuperComponents/Button/Button'\r\nimport style from './NotFound.module.css'\r\n\r\ntype NotFoundPropsType = {}\r\n\r\n\r\nconst NotFound: React.FC<NotFoundPropsType> = () => {\r\n    return <section className={style.page_404}>\r\n        <div className={style.container}>\r\n            <div className={style.four_zero_four_bg}>\r\n                <h1 className={style.heading}>404</h1>\r\n            </div>\r\n            <div className={style.contant_box_404}>\r\n                <h3 className={style.h2}>\r\n                    Look like you're lost\r\n                </h3>\r\n                <p>the page you are looking for not available!</p>\r\n                <Button> Go home </Button>\r\n            </div>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default NotFound","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './NavBar.module.css'\r\nimport {path} from \"../../App\";\r\n\r\ntype NavBarPropsType = {}\r\n\r\nconst NavBar: React.FC<NavBarPropsType> = (props) => {\r\n    return <div className={style.header}>\r\n        <input type=\"checkbox\" className={style.openSidebarMenu} id=\"openSidebarMenu\"/>\r\n        <label htmlFor=\"openSidebarMenu\" className={style.sidebarIconToggle}>\r\n            <div className={`${style.spinner} ${style.diagonal} ${style.part1}`}/>\r\n            <div className={`${style.spinner} ${style.horizontal}`}/>\r\n            <div className={`${style.spinner} ${style.diagonal} ${style.part2}`}/>\r\n        </label>\r\n        <div className={style.sidebarMenu}>\r\n            <ul className={style.sidebarMenuInner}>\r\n                <li><NavLink to={path.LOGIN}> LogIn </NavLink></li>\r\n                <li><NavLink to={path.REG}> Registration </NavLink></li>\r\n                <li><NavLink to={path.PASS_REC}> Password recovery</NavLink></li>\r\n                <li><NavLink to={path.PASSWORD}> New password </NavLink></li>\r\n                <li><NavLink to={path.PROFILE}> Profile </NavLink></li>\r\n                <li><NavLink to={'/'}> All components </NavLink></li>\r\n            </ul>\r\n        </div>\r\n        <div className={`${style.main} ${style.center}`}>\r\n            <div className={style.mainInner}>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default NavBar","import React, { DetailedHTMLProps, InputHTMLAttributes, } from \"react\";\r\nimport style from \"./Input.module.css\";\r\n\r\nexport type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype InputTextPropsType = DefaultInputPropsType & {\r\n\r\n};\r\n\r\nexport const Input: React.FC<InputTextPropsType> = ({placeholder,type,onChange,value}) => {\r\n\r\n    return <div className={style.inputContainer}>\r\n        <input className={style.input} type={type} value={value} onChange={onChange} placeholder={placeholder}/>\r\n        <span className={style.focusBorder}/>\r\n    </div>\r\n}\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport style from \"./Checkbox.module.css\";\r\n\r\n\r\ntype CheckboxPropsType = {};\r\n\r\nconst Checkbox: React.FC<CheckboxPropsType> = () => {\r\n\r\n    const [checked, setChecked] = React.useState<boolean>(false)\r\n    const onChangeHandler = () => setChecked(!checked)\r\n\r\n    console.log(checked)\r\n\r\n    return <div className={style.container}>\r\n        <label className={style.pureMaterialCheckbox}>\r\n            <input type={\"checkbox\"} className={style.input} checked={checked} onChange={onChangeHandler}/>\r\n            <span className={style.spanClassName}>  Checkbox  </span>\r\n        </label>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport style from \"./RadioInput.module.css\";\r\n\r\n\r\ntype RadioInputPropsType = {}\r\n\r\nconst RadioInput: React.FC<RadioInputPropsType> = (props) => {\r\n    return <label className={style.radio}>\r\n        <input type=\"radio\" name=\"group\"/>\r\n        <span>Radio Button</span>\r\n    </label>\r\n}\r\n\r\nexport default RadioInput","import React from \"react\";\r\nimport style from \"./SelectInput.module.css\";\r\n\r\n\r\ntype SelectInputPropsType = {}\r\n\r\nconst SelectInput: React.FC<SelectInputPropsType> = (props) => {\r\n    return <div className={style.select}>\r\n        <select className={style.selectText} required>\r\n            <option value=\"0\" defaultValue={'Default Value'}> Default Value </option>\r\n            <option value=\"1\">Option 1</option>\r\n            <option value=\"2\">Option 2</option>\r\n            <option value=\"3\">Option 3</option>\r\n        </select>\r\n        <span className={style.selectHighlight}/>\r\n        <span className={style.selectBar}/>\r\n        <label className={style.selectLabel}>Select</label>\r\n    </div>\r\n}\r\n\r\nexport default SelectInput","import React from \"react\";\r\nimport style from \"./ProgressBar.module.css\";\r\n\r\n\r\ntype ProgressBarTextPropsType = {\r\n\r\n};\r\n\r\nexport const ProgressBar: React.FC<ProgressBarTextPropsType> = () => {\r\n\r\n    const loadingValue = {\r\n        width: '100%'\r\n    }\r\n\r\n    return <div className={style.progress}>\r\n        <span className={style.progressBar} style={loadingValue}/>\r\n    </div>\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport Input from \"./Components/SuperComponents/Input/Input\";\r\nimport Button from \"./Components/SuperComponents/Button/Button\";\r\nimport Checkbox from \"./Components/SuperComponents/CheckBox/Checkbox\";\r\nimport RadioInput from \"./Components/SuperComponents/RadioInput/RadioInput\";\r\nimport SelectInput from \"./Components/SuperComponents/SelectInput/SelectInput\";\r\nimport ProgressBar from \"./Components/SuperComponents/ProgressBar/ProgressBar\";\r\n\r\ntype AllComponentsPropsType = {}\r\n\r\nconst AllComponents: React.FC<AllComponentsPropsType> = () => {\r\n    return <div className={'allComponents'}>\r\n        <Input/>\r\n        <Button> Click me </Button>\r\n        <Checkbox/>\r\n        <RadioInput/>\r\n        <RadioInput/>\r\n        <SelectInput/>\r\n        <ProgressBar/>\r\n    </div>\r\n}\r\n\r\nexport default AllComponents","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n})\r\n","import {instance} from \"./api\";\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n        //.data\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n//types\r\nexport type nameType = {}\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../../Api/api-login';\r\n\r\ntype InitialStateType = {\r\n    user: UserDataType | {},\r\n    isAuth: boolean\r\n}\r\ntype UserDataType = {\r\n    _id: string | null,\r\n    email: string | null,\r\n    name: string | null,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean\r\n}\r\nconst initialState = {\r\n    user: {},\r\n    isAuth: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\n\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error:(e.message+\", more details in the console\")\r\n        console.log(error)\r\n    })\r\n}\r\n\r\n\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserDataAC>\r\n\r\ntype ActionsType =\r\n    |  setAuthUserDataType","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../Redux/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {getAuthUserData} from '../../Redux/reducers/loginReducer';\r\n\r\n\r\ntype LoginPropsType = {}\r\n\r\nconst Login: React.FC<LoginPropsType> = () => {\r\n    const dispatch = useDispatch()\r\n    let isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    let [email, setEmail] = useState<string>('')\r\n    let [password, setPassword] = useState<string>('')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    let onclickHandler = () => {\r\n        console.log(email, password, rememberMe)\r\n        dispatch(getAuthUserData(email, password, rememberMe))\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'./profile'}/>\r\n    }\r\n    return <div className={style.wrapper}>\r\n        <h4>SIGN IN</h4>\r\n        <input type={'email'}\r\n               placeholder={'Enter email'}\r\n               onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)}/>\r\n        <input type={'password'}\r\n               placeholder={'Password'}\r\n               onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)}/>\r\n        <input style={{display:'block'}}\r\n            type={'checkbox'} onChange={(e: ChangeEvent<HTMLInputElement>) => setRememberMe(e.currentTarget.checked)}/>\r\n        <button onClick={onclickHandler}>Submit</button>\r\n\r\n    </div>\r\n};\r\n\r\nexport default Login;","//Types\r\ntype ActionsType = ReturnType<typeof setAppStatusAC> | ReturnType<typeof setAppErrorAC>\r\ntype InitialStateType = {\r\n    statusResponse: RequestStatusType\r\n    error: string | null\r\n}\r\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n//InitialState\r\nconst initialState: InitialStateType = {\r\n    statusResponse: 'idle',\r\n    error: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-APP-STATUS':\r\n            return {...state, statusResponse: actions.status}\r\n        case \"SET-APP-ERROR\":\r\n            return {...state, error: actions.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'SET-APP-STATUS', status} as const)\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'SET-APP-ERROR', error} as const)\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../Api/api-regestration\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"./appReducer\";\r\n\r\n//Types\r\ntype ActionsType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof setRedirectProfileAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\ntype InitialStateType = {\r\n    password: string\r\n    email: string\r\n    isRedirect: boolean\r\n}\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        created: string\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\nexport type ErrorResponseType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp?: {}\r\n            error: string\r\n            email?: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n    }\r\n}\r\n\r\n//InitialState\r\nconst initialState: InitialStateType = {\r\n    password: '',\r\n    email: '',\r\n    isRedirect: false,\r\n}\r\n\r\n//Reducer\r\nexport const registrationReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-REGISTRATION':\r\n            return {...state, ...actions.regData}\r\n        case \"SET-REDIRECT-PROFILE\":\r\n            return {...state, isRedirect: actions.isRedirect}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const setRegistrationAC = (regData: RegistrationRequestType) => ({type: 'SET-REGISTRATION', regData} as const)\r\n\r\nexport const setRedirectProfileAC = (isRedirect: boolean) => ({type: 'SET-REDIRECT-PROFILE', isRedirect} as const)\r\n\r\n\r\n//Thunk\r\nexport const registrationTC = (regData: RegistrationRequestType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    registrationAPI().registration({...regData})\r\n        .then((res) => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            const dataAboutUser = res.data.addedUser\r\n            // Если не происходит редирект после того как зарегались проблема ниже . Этот код считает длинну объекта ,всего там 10 ключей. Смотрел\r\n            if (Object.keys(dataAboutUser).length === 10) {\r\n                // debugger\r\n                dispatch(setRegistrationAC({...regData}))\r\n                dispatch(setRedirectProfileAC(true))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            }\r\n        })\r\n        .catch((error: ErrorResponseType) => {\r\n            dispatch(setAppStatusAC('loading'))\r\n            if (error.response.data.in === 'createUser') {\r\n                dispatch(setAppErrorAC(error.response.data.error))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n            if (!error.response.data.isEmailValid) {\r\n                dispatch(setAppErrorAC(error.response.data.error))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n            if (!error.response.data.isPassValid) {\r\n                error.response.data.passwordRegExp && dispatch(setAppErrorAC(error.response.data.passwordRegExp))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n        })\r\n}\r\n\r\n","import {RegistrationRequestType, RegistrationResponseType} from \"../Redux/reducers/registrationReducer\";\r\nimport {instance} from \"./api\";\r\n\r\n\r\n//API\r\nexport const registrationAPI = () => {\r\n    return {\r\n        registration: (dataReg: RegistrationRequestType) => {\r\n            return instance.post<RegistrationResponseType>(`auth/register`, {...dataReg})\r\n        }\r\n    }\r\n}","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../Redux/store\";\r\nimport {setAppErrorAC} from \"../../Redux/reducers/appReducer\";\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nconst ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<RootStateType, string | null>(state => state.app.error)\r\n\r\n    const onClickHandler = () => dispatch(setAppErrorAC(null))\r\n\r\n    return <div className={error ? `${style.notification}` : `: ${style.closeNotification}`}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ErrorSnackBar;","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport style from \"./Registration.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {path} from \"../../App\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../Redux/store\";\r\nimport {registrationTC} from \"../../Redux/reducers/registrationReducer\";\r\nimport {Input} from '../SuperComponents/Input/Input';\r\nimport Button from \"../SuperComponents/Button/Button\";\r\nimport ErrorSnackBar from \"../ErrorSnackBar/ErrorSnackBar\";\r\nimport {RequestStatusType} from \"../../Redux/reducers/appReducer\";\r\n\r\ntype RegistrationPropsType = {\r\n    statusApp:RequestStatusType\r\n}\r\n\r\nconst Registration: React.FC<RegistrationPropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('xranitelinadejd@gmail.com')\r\n    const [password, setPassword] = useState<string>('KOSTYA1234END.')\r\n    const isRedirectProfile = useSelector<RootStateType, boolean>(state => state.registration.isRedirect)\r\n    const error = useSelector<RootStateType, string | null>(state => state.app.error)\r\n\r\n    const onChangeHandlerEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [])\r\n    const onChangeHandlerPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [])\r\n\r\n    const onClickHandler = () => (dispatch(registrationTC({email, password})))\r\n\r\n    if (isRedirectProfile) {\r\n        return <Redirect to={path.PROFILE}/>\r\n    }\r\n\r\n    return <div className={style.wrapper}>\r\n        <h1>Registration</h1>\r\n        {error && <ErrorSnackBar errorMessage={error}/>}\r\n        <form className={style.registrForm}>\r\n            <Input type={'text'} value={email} onChange={onChangeHandlerEmail} placeholder={'Email'}/>\r\n            <Input type={'password'} value={password} onChange={onChangeHandlerPassword} placeholder={'Password'}/>\r\n            <Button onClick={onClickHandler} disabled={props.statusApp === 'loading'}> Registration </Button>\r\n        </form>\r\n    </div>\r\n};\r\n\r\nexport default Registration;","import React from 'react';\r\nimport style from \"./Profile.module.css\";\r\n\r\n\r\ntype ProfilePropsType = {}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = () => {\r\n    return <div className={style.wrapper}>\r\n        <h1>Profile</h1>\r\n    </div>\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport style from \"./ResetPassword.module.css\";\r\n\r\n\r\ntype PasswordPropsType = {}\r\n\r\nconst ResetPassword: React.FC<PasswordPropsType> = () => {\r\n    return <div className={style.wrapper}>\r\n        <h1>Password</h1>\r\n    </div>\r\n};\r\n\r\nexport default ResetPassword;","//Response type\r\nimport {instance} from \"./api\";\r\n\r\nexport type APIResponseType<D = {}> = {\r\n    data: D\r\n    statusText: string\r\n}\r\nexport type PasswordRecoveryType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\nexport const recoveryAPI = {\r\n    recover(email: string) {\r\n        return instance.post<APIResponseType<PasswordRecoveryType>>('/auth/forgot', {\r\n            email: email,\r\n            from: \"test-front-admin <serega.kuharionok@yandex.ru>\",\r\n            message: `<div style=\"background-color: #00ff00; padding: 15px\">\r\n                            password recovery link: \r\n                     <a href='http://localhost:3000/FridayProject#/newPassword/$token$'>Click</a>\r\n                     </div>`\r\n        });\r\n    },\r\n}","import {ThunkAction} from \"redux-thunk\";\r\nimport {RootStateType} from \"../store\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {recoveryAPI} from \"../../Api/api-recovery-password\";\r\n\r\n//Action Creator type\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never\r\nexport type InferActionsTypes<T extends { [key: string]: (...args: any) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\n//Thunk Type\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, RootStateType, unknown, A>\r\n\r\n//Get auto types\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n\r\nlet initializeState = {\r\n    status: '',\r\n    isFetching: false\r\n}\r\n\r\nexport type InitializeStateType = typeof initializeState\r\n\r\nexport const passwordRecoveryReducer = (state: InitializeStateType = initializeState, action: ActionsType): InitializeStateType => {\r\n    switch (action.type) {\r\n        case \"FP/RECOVERY/SET-STATUS\":\r\n            return {\r\n                ...state, status: action.payload.status\r\n            }\r\n        case \"FP/RECOVERY/PROGRESS\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.payload.state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions object\r\nconst actions = {\r\n    setStatus: (status: string) => ({\r\n        type: 'FP/RECOVERY/SET-STATUS',\r\n        payload: {status},\r\n    } as const),\r\n    isFetching: (state: boolean) => ({\r\n        type: 'FP/RECOVERY/PROGRESS',\r\n        payload: {state},\r\n    } as const),\r\n}\r\n\r\n//Thunk\r\nexport const sendRecoveryEmail = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(actions.setStatus('Loading'))\r\n    dispatch(actions.isFetching(true))\r\n    recoveryAPI.recover(email)\r\n        .then(res => {\r\n        if (res.status === 200) {\r\n            dispatch(actions.isFetching(false))\r\n            dispatch(actions.setStatus('Message sent. Check your email'))\r\n        } else {\r\n            dispatch(actions.isFetching(false))\r\n            dispatch(actions.setStatus('Something went wrong:('))\r\n        }\r\n    })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(actions.isFetching(false))\r\n            dispatch(actions.setStatus(`Something went wrong:( ${error}`))\r\n        })\r\n}\r\n\r\n","import React, {ChangeEvent, useState} from 'react';\r\n\r\nimport {path} from \"../../../App\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {RootStateType} from \"../../../Redux/store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendRecoveryEmail} from \"../../../Redux/reducers/passwordRecovery-reducer\";\r\n\r\nimport s from \"./PasswordRecovery.module.css\";\r\n\r\nconst PasswordRecovery: React.FC = () => {\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    //get current status\r\n    const status = useSelector<RootStateType, string>((state) => state.passwordRecovery.status)\r\n    //get progress state\r\n    const isFetching = useSelector<RootStateType, boolean>((state) => state.passwordRecovery.isFetching)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(sendRecoveryEmail(value))\r\n        //clear local state field\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className={s.recoveryPage}>\r\n            <div className={s.formWrapper}>\r\n                <h1 className={s.pageName}>Recovery Password</h1>\r\n                <div className={s.inner}>\r\n                    <h3 className={s.title}>Welcome to App</h3>\r\n                    <div className={s.recoveryForm}>\r\n                        {\r\n                            status && <span className={s.statusMessage}>{status}</span>\r\n                        }\r\n                        <div className={s.fieldBlock}>\r\n                            <input type=\"email\"\r\n                                   value={value}\r\n                                   className={s.input}\r\n                                   onChange={inputHandler}/>\r\n                            <button onClick={sendEmail}\r\n                                    disabled={isFetching}\r\n                                    className={s.btn}>Send\r\n                            </button>\r\n                            <NavLink to={path.LOGIN} className={s.loginLink}>Login</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PasswordRecovery;","import React from 'react';\r\nimport './App.css';\r\nimport NotFound from \"./Components/NotFound/NotFound\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport AllComponents from \"./AllComponents\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport Registration from \"./Components/Registration/Registration\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport ResetPassword from \"./Components/Passwords/ResetPassword/ResetPassword\";\r\nimport PasswordRecovery from \"./Components/Passwords/PasswordRecovery/PasswordRecovery\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./Redux/store\";\r\nimport ProgressBar from \"./Components/SuperComponents/ProgressBar/ProgressBar\";\r\nimport {RequestStatusType} from \"./Redux/reducers/appReducer\";\r\n\r\nexport const path = {\r\n    LOGIN: '/login',\r\n    REG: '/registration',\r\n    PASSWORD: '/newPassword/:token?',\r\n    PASS_REC: '/passwordRecovery',\r\n    PROFILE: '/profile',\r\n    ALL_COMPONENTS: '/allComponents',\r\n}\r\n\r\nfunction App() {\r\n\r\n    const statusApp = useSelector<RootStateType, RequestStatusType>(state => state.app.statusResponse)\r\n// debugger\r\n    return <div>\r\n        <NavBar/>\r\n\r\n        {statusApp === 'loading' ? <ProgressBar/> : null}\r\n        {/* Switch нужен чтобы в url адрессе отображалось только то что нужно(＾▽＾)*/}\r\n        <Switch>\r\n            <Route path={'/'} exact render={() => <AllComponents/>}/>\r\n            <Route path={path.LOGIN} exact render={() => <Login/>}/>\r\n            <Route path={path.REG} exact render={() => <Registration statusApp={statusApp}/>}/>\r\n            <Route path={path.PASSWORD} exact render={() => <ResetPassword/>}/>\r\n            <Route path={path.PASS_REC} exact render={() => <PasswordRecovery/>}/>\r\n            <Route path={path.PROFILE} exact render={() => <Profile/>}/>\r\n            <Route path={path.ALL_COMPONENTS} exact render={() => <AllComponents/>}/>\r\n            {/*Отрисуется в случае если не один url не подойдет (´｡• ᵕ •｡)*/}\r\n            <Route path={'/404'} render={() => <NotFound/>}/>\r\n            <Redirect from={'*'} to={'/404'}/>\r\n\r\n        </Switch>\r\n\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState: InitialStateType = {}\r\n\r\nexport const profileReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case '':\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const profileAC = () => ({type:''} as const )\r\n\r\n//Types\r\ntype ActionsType = ReturnType<typeof profileAC>\r\n\r\ntype InitialStateType = {}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loginReducer} from \"./reducers/loginReducer\";\r\nimport {registrationReducer} from \"./reducers/registrationReducer\";\r\nimport {profileReducer} from \"./reducers/profileReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport {passwordRecoveryReducer} from \"./reducers/passwordRecovery-reducer\";\r\nimport {appReducer} from \"./reducers/appReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    passwordRecovery: passwordRecoveryReducer,\r\n    // createPassword: createNewPasswordReducer,todo:add this thunk!!!create and recover - different pages!\r\n    registration:registrationReducer,\r\n    profile:profileReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./Redux/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*HashRouter используем для статических серверов типо GH-pages. BrowserRouter для сервера который отвечает на запросы*/}\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}