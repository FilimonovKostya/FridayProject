{"version":3,"sources":["Components/SuperComponents/SendingForm/SendingForm.module.css","Components/NotFound/NotFound.module.css","Components/SuperComponents/SelectInput/SelectInput.module.css","Components/ErrorSnackBar/ErrorSnackBar.module.css","Components/SuperComponents/CheckBox/Checkbox.module.css","Components/Password/Password.module.css","Components/SuperComponents/Input/Input.module.css","Components/SuperComponents/Button/Button.module.css","Components/SuperComponents/ProgressBar/ProgressBar.module.css","Components/Login/Login.module.css","Components/Registration/Registration.module.css","Components/Login/Logout.module.css","Components/SuperComponents/RadioInput/RadioInput.module.css","Components/Profile/Profile.module.css","Components/Login/UserIsNotAuthorixed.module.css","Components/NavBar/NavBar.module.css","Components/SuperComponents/Button/Button.tsx","Components/NotFound/NotFound.tsx","Api/api.ts","Api/api-login.ts","Redux/reducers/appReducer.ts","Redux/reducers/loginReducer.ts","Components/Login/Logout.tsx","Components/NavBar/NavBar.tsx","Components/SuperComponents/Input/Input.tsx","Components/SuperComponents/CheckBox/Checkbox.tsx","Components/SuperComponents/RadioInput/RadioInput.tsx","Components/SuperComponents/SelectInput/SelectInput.tsx","Components/SuperComponents/ProgressBar/ProgressBar.tsx","AllComponents.tsx","Components/ErrorSnackBar/ErrorSnackBar.tsx","Components/Login/Login.tsx","Redux/reducers/registrationReducer.ts","Api/api-regestration.ts","Components/Registration/Registration.tsx","Components/Login/UserIsNotAuthorized.tsx","Components/Profile/Profile.tsx","Components/SuperComponents/SendingForm/SendingForm.tsx","Api/api-password.ts","Components/Password/ResetPassword.tsx","Redux/reducers/resetPasswordThunks.ts","Components/Password/PasswordRecovery.tsx","App.tsx","reportWebVitals.ts","Redux/reducers/profileReducer.ts","Redux/store.ts","index.tsx"],"names":["module","exports","Button","children","onClick","disabled","className","style","container","button","NotFound","page_404","four_zero_four_bg","heading","contant_box_404","h2","instance","axios","create","withCredentials","baseURL","authAPI","email","password","rememberMe","post","delete","initialState","statusResponse","error","setAppStatusAC","status","type","setAppErrorAC","user","isAuth","setAuthUserDataAC","payload","Logout","dispatch","useDispatch","logoutForm","then","response","alert","data","info","catch","e","message","NavBar","props","header","openSidebarMenu","id","htmlFor","sidebarIconToggle","spinner","diagonal","part1","horizontal","part2","sidebarMenu","sidebarMenuInner","to","path","LOGIN","REG","PASS_REC","PASSWORD","PROFILE","main","center","mainInner","Input","placeholder","onChange","value","onKeyPress","onEnter","inputContainer","input","key","focusBorder","Checkbox","title","pureMaterialCheckbox","spanClassName","RadioInput","radio","name","SelectInput","select","selectText","required","defaultValue","selectHighlight","selectBar","selectLabel","ProgressBar","progress","progressBar","width","AllComponents","ErrorSnackBar","useSelector","state","app","notification","closeNotification","text","errorMessage","close","Login","login","useState","setEmail","setPassword","setRememberMe","wrapper","loginForm","currentTarget","checked","getAuthUserData","isRedirect","registrationTC","regData","dataReg","res","dataAboutUser","addedUser","Object","keys","length","setRegistrationAC","in","isEmailValid","isPassValid","passwordRegExp","Registration","isRedirectProfile","registration","onChangeHandlerEmail","useCallback","onChangeHandlerPassword","registrForm","statusApp","UserIsNotAuthorized","Profile","SendingForm","formName","formDescription","callback","inputPlaceholder","inputType","buttonName","btnDisabled","navLinkPath","setValue","buttonOnClick","s","formWrapper","pageName","inner","statusMessage","recoveryForm","fieldBlock","btn","loginLink","passwordAPI","from","token","resetPasswordToken","ResetPassword","useParams","history","useHistory","appStatus","tokenName","setTimeout","push","useEffect","pageWrapper","resetPassword","PasswordRecovery","sendRecoveryEmail","ALL_COMPONENTS","App","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","actions","profile","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ae566d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"SendingForm_formWrapper__3cLey\",\"pageName\":\"SendingForm_pageName__3jP7U\",\"title\":\"SendingForm_title__1FSsj\",\"statusMessage\":\"SendingForm_statusMessage__glxLU\",\"loginLink\":\"SendingForm_loginLink__NBb_O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_404\":\"NotFound_page_404__2vzBh\",\"four_zero_four_bg\":\"NotFound_four_zero_four_bg__aL_Zw\",\"heading\":\"NotFound_heading__2vIgw\",\"link_404\":\"NotFound_link_404__1HUC0\",\"contant_box_404\":\"NotFound_contant_box_404__3EeJB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SelectInput_select__t7_MJ\",\"selectText\":\"SelectInput_selectText__1E1Vj\",\"selectLabel\":\"SelectInput_selectLabel__ckMvE\",\"selectBar\":\"SelectInput_selectBar__1W9k-\",\"selectHighlight\":\"SelectInput_selectHighlight__oLhkC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"ErrorSnackBar_notification__62191\",\"closeNotification\":\"ErrorSnackBar_closeNotification__2bAJR\",\"text\":\"ErrorSnackBar_text__1YdwU\",\"close\":\"ErrorSnackBar_close__1TOKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Checkbox_container__3hI4r\",\"pureMaterialCheckbox\":\"Checkbox_pureMaterialCheckbox__1Dqf-\",\"input\":\"Checkbox_input__2ISZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrapper\":\"Password_pageWrapper__3Q56t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Input_inputContainer__1Hgl5\",\"input\":\"Input_input__2zamn\",\"focusBorder\":\"Input_focusBorder__PUTKn\",\"has-content\":\"Input_has-content__2L1L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__1SkJ8\",\"button\":\"Button_button__3mpuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"ProgressBar_progress__2Sfjm\",\"progressBar\":\"ProgressBar_progressBar__1XPnk\",\"progress-animation\":\"ProgressBar_progress-animation__2tdFO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__3STBn\",\"loginForm\":\"Login_loginForm__1mek5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Registration_wrapper__2eKcD\",\"registrForm\":\"Registration_registrForm__1YaKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutForm\":\"Logout_logoutForm__3KzTQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"RadioInput_radio__v3cOa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__10amh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserIsNotAuthorixed_wrapper__1GGoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavBar_header__1Znrq\",\"mainInner\":\"NavBar_mainInner__1omEQ\",\"sidebarMenu\":\"NavBar_sidebarMenu__27xxU\",\"sidebarMenuInner\":\"NavBar_sidebarMenuInner__Do8cs\",\"openSidebarMenu\":\"NavBar_openSidebarMenu__2Jk1s\",\"sidebarIconToggle\":\"NavBar_sidebarIconToggle__2Gqwx\",\"spinner\":\"NavBar_spinner__KDn5v\",\"horizontal\":\"NavBar_horizontal__1q3ux\",\"diagonal\":\"NavBar_diagonal__2CECM\",\"part1\":\"NavBar_part1__2DzVq\",\"part2\":\"NavBar_part2__1zKY_\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport style from \"./Button.module.css\";\r\n\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype ButtonPropsType = DefaultInputPropsType & {}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({children,onClick, disabled}) => {\r\n\r\n    return <div className={style.container}>\r\n        <button className={style.button} disabled={disabled} onClick={onClick}>{children}</button>\r\n    </div>\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport  Button  from '../SuperComponents/Button/Button'\r\nimport style from './NotFound.module.css'\r\n\r\ntype NotFoundPropsType = {}\r\n\r\n\r\nconst NotFound: React.FC<NotFoundPropsType> = () => {\r\n    return <section className={style.page_404}>\r\n        <div className={style.container}>\r\n            <div className={style.four_zero_four_bg}>\r\n                <h1 className={style.heading}>404</h1>\r\n            </div>\r\n            <div className={style.contant_box_404}>\r\n                <h3 className={style.h2}>\r\n                    Look like you're lost\r\n                </h3>\r\n                <p>the page you are looking for not available!</p>\r\n                <Button> Go home </Button>\r\n            </div>\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default NotFound","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    //baseURL: 'http://localhost:7542/2.0/',\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n})\r\n","import {instance} from \"./api\";\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n        //.data\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    }\r\n}\r\n\r\n//types\r\nexport type nameType = {}\r\n\r\n","//Types\r\ntype ActionsType = ReturnType<typeof setAppStatusAC> | ReturnType<typeof setAppErrorAC>\r\ntype InitialStateType = {\r\n    statusResponse: RequestStatusType\r\n    error: string | null\r\n}\r\nexport type RequestStatusType =  'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\n//InitialState\r\nconst initialState: InitialStateType = {\r\n    statusResponse: 'idle',\r\n    error: null\r\n}\r\n\r\nexport const appReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-APP-STATUS':\r\n            return {...state, statusResponse: actions.status}\r\n        case \"SET-APP-ERROR\":\r\n            return {...state, error: actions.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'SET-APP-STATUS', status} as const)\r\n\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'SET-APP-ERROR', error} as const)\r\n\r\n//test comit","import {Dispatch} from 'redux';\r\nimport {authAPI} from '../../Api/api-login';\r\nimport {setAppErrorAC, setAppStatusAC} from './appReducer';\r\n\r\ntype InitialStateType = {\r\n    user: UserDataType | {},\r\n    isAuth: boolean\r\n}\r\nexport type UserDataType = {\r\n    _id: string,\r\n    email: string,\r\n    name: string,\r\n    avatar: string | null,\r\n    publicCardPacksCount: number,\r\n    created: Date,\r\n    updated: Date,\r\n    isAdmin: boolean,\r\n    verified: boolean,\r\n    rememberMe: boolean\r\n}\r\nconst initialState = {\r\n    user: {},\r\n    isAuth: false,\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n    export const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\n\r\n\r\n    export const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        authAPI.login(email, password, rememberMe)\r\n            .then(response => {\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                    dispatch(setAuthUserDataAC({user: response.data, isAuth: true}))\r\n                }\r\n            ).catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            dispatch(setAppErrorAC(error))\r\n            dispatch(setAppStatusAC('failed'))\r\n        })\r\n    }\r\n    export const deleteAuthUserData = () => (dispatch: Dispatch<ActionsType>) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        authAPI.logout()\r\n            .then(response => {\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                    dispatch(setAuthUserDataAC({user: {}, isAuth: false}))\r\n                    alert(response.data.info)\r\n                }\r\n            ).catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console')\r\n            dispatch(setAppStatusAC('failed'))\r\n            alert(error)\r\n        })\r\n    }\r\n\r\n    export type setAuthUserDataType = ReturnType<typeof setAuthUserDataAC>\r\n\r\n\r\n    type ActionsType =\r\n        | setAuthUserDataType\r\n        | ReturnType<typeof setAppStatusAC>\r\n        | ReturnType<typeof setAppErrorAC>\r\n\r\n","import React from 'react';\r\nimport style from './Logout.module.css';\r\nimport {deleteAuthUserData} from '../../Redux/reducers/loginReducer';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\n\r\ntype LoginPropsType = {}\r\n\r\nconst Logout: React.FC<LoginPropsType> = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let onclickHandler = () => {\r\n        dispatch(deleteAuthUserData())\r\n    }\r\n    return (\r\n        <div className={style.logoutForm} onClick={onclickHandler}> LOGOUT</div>\r\n    )\r\n};\r\n\r\nexport default Logout;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport style from './NavBar.module.css'\r\nimport {path} from \"../../App\";\r\nimport Logout from '../Login/Logout';\r\n\r\n\r\ntype NavBarPropsType = {}\r\n\r\nconst NavBar: React.FC<NavBarPropsType> = (props) => {\r\n    return <div className={style.header}>\r\n        <input type=\"checkbox\" className={style.openSidebarMenu} id=\"openSidebarMenu\"/>\r\n        <label htmlFor=\"openSidebarMenu\" className={style.sidebarIconToggle}>\r\n            <div className={`${style.spinner} ${style.diagonal} ${style.part1}`}/>\r\n            <div className={`${style.spinner} ${style.horizontal}`}/>\r\n            <div className={`${style.spinner} ${style.diagonal} ${style.part2}`}/>\r\n        </label>\r\n        <div className={style.sidebarMenu}>\r\n            <ul className={style.sidebarMenuInner}>\r\n                <li><NavLink to={path.LOGIN}> LogIn </NavLink></li>\r\n                <li><NavLink to={path.REG}> Registration </NavLink></li>\r\n                <li><NavLink to={path.PASS_REC}> Password recovery</NavLink></li>\r\n                <li><NavLink to={path.PASSWORD}> New password </NavLink></li>\r\n                <li><NavLink to={path.PROFILE}> Profile </NavLink></li>\r\n                <li><NavLink to={'/'}> All components </NavLink></li>\r\n                <li><Logout/></li>\r\n            </ul>\r\n        </div>\r\n        <div className={`${style.main} ${style.center}`}>\r\n            <div className={style.mainInner}>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default NavBar","import React, { DetailedHTMLProps, InputHTMLAttributes, } from \"react\";\r\nimport style from \"./Input.module.css\";\r\n\r\nexport type DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype InputTextPropsType = DefaultInputPropsType & {\r\n    onEnter?: () => void\r\n};\r\n\r\nexport const Input: React.FC<InputTextPropsType> = ({placeholder,type,onChange,value, onKeyPress, onEnter}) => {\r\n\r\n    const onKeyPressCallback = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e)\r\n\r\n        e.key === 'Enter'\r\n        && onEnter\r\n        && onEnter()\r\n    }\r\n\r\n    return <div className={style.inputContainer}>\r\n        <input className={style.input}\r\n               onKeyPress={onKeyPressCallback}\r\n               type={type}\r\n               value={value}\r\n               onChange={onChange}\r\n               placeholder={placeholder}/>\r\n        <span className={style.focusBorder}/>\r\n    </div>\r\n}\r\n\r\nexport default Input;\r\n","import React, {ChangeEvent} from 'react';\r\nimport style from './Checkbox.module.css';\r\n\r\n\r\ntype CheckboxPropsType = {\r\n    title: string,\r\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\r\n};\r\n\r\nconst Checkbox: React.FC<CheckboxPropsType> = ({title, onChange}) => {\r\n\r\n\r\n    return <div className={style.container}>\r\n        <label className={style.pureMaterialCheckbox}>\r\n            <input type={'checkbox'} className={style.input} onChange={onChange}/>\r\n            <span className={style.spanClassName}>  {title}  </span>\r\n        </label>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Checkbox;\r\n","import React from \"react\";\r\nimport style from \"./RadioInput.module.css\";\r\n\r\n\r\ntype RadioInputPropsType = {}\r\n\r\nconst RadioInput: React.FC<RadioInputPropsType> = (props) => {\r\n    return <label className={style.radio}>\r\n        <input type=\"radio\" name=\"group\"/>\r\n        <span>Radio Button</span>\r\n    </label>\r\n}\r\n\r\nexport default RadioInput","import React from \"react\";\r\nimport style from \"./SelectInput.module.css\";\r\n\r\n\r\ntype SelectInputPropsType = {}\r\n\r\nconst SelectInput: React.FC<SelectInputPropsType> = (props) => {\r\n    return <div className={style.select}>\r\n        <select className={style.selectText} required>\r\n            <option value=\"0\" defaultValue={'Default Value'}> Default Value </option>\r\n            <option value=\"1\">Option 1</option>\r\n            <option value=\"2\">Option 2</option>\r\n            <option value=\"3\">Option 3</option>\r\n        </select>\r\n        <span className={style.selectHighlight}/>\r\n        <span className={style.selectBar}/>\r\n        <label className={style.selectLabel}>Select</label>\r\n    </div>\r\n}\r\n\r\nexport default SelectInput","import React from \"react\";\r\nimport style from \"./ProgressBar.module.css\";\r\n\r\n\r\ntype ProgressBarTextPropsType = {\r\n\r\n};\r\n\r\nexport const ProgressBar: React.FC<ProgressBarTextPropsType> = () => {\r\n\r\n    const loadingValue = {\r\n        width: '100%'\r\n    }\r\n\r\n    return <div className={style.progress}>\r\n        <span className={style.progressBar} style={loadingValue}/>\r\n    </div>\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport Input from \"./Components/SuperComponents/Input/Input\";\r\nimport Button from \"./Components/SuperComponents/Button/Button\";\r\nimport Checkbox from \"./Components/SuperComponents/CheckBox/Checkbox\";\r\nimport RadioInput from \"./Components/SuperComponents/RadioInput/RadioInput\";\r\nimport SelectInput from \"./Components/SuperComponents/SelectInput/SelectInput\";\r\nimport ProgressBar from \"./Components/SuperComponents/ProgressBar/ProgressBar\";\r\n\r\ntype AllComponentsPropsType = {}\r\n\r\nconst AllComponents: React.FC<AllComponentsPropsType> = () => {\r\n    return <div className={'allComponents'}>\r\n        <Input/>\r\n        <Button> Click me </Button>\r\n        <Checkbox title={'Checkbox'}/>\r\n        <RadioInput/>\r\n        <RadioInput/>\r\n        <SelectInput/>\r\n        <ProgressBar/>\r\n    </div>\r\n}\r\n\r\nexport default AllComponents","import style from './ErrorSnackBar.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport {setAppErrorAC} from \"../../Redux/reducers/appReducer\";\r\nimport {RootStateType} from '../../Redux/store';\r\n\r\ntype ErrorSnackBarPropsType = {\r\n    errorMessage: string\r\n}\r\n\r\nconst ErrorSnackBar = (props: ErrorSnackBarPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const error = useSelector<RootStateType, string | null>(state => state.app.error)\r\n\r\n    const onClickHandler = () => dispatch(setAppErrorAC(null))\r\n\r\n    return <div className={error ? `${style.notification}` : `: ${style.closeNotification}`}>\r\n        <div className={style.text}> {props.errorMessage} </div>\r\n        <div className={`${style.close}`}>\r\n            <div className={style.text} onClick={onClickHandler}>X</div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default ErrorSnackBar;","import React, {ChangeEvent, useState} from 'react';\r\nimport style from './Login.module.css';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../Redux/store';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {getAuthUserData} from '../../Redux/reducers/loginReducer';\r\nimport Input from '../SuperComponents/Input/Input';\r\nimport Checkbox from '../SuperComponents/CheckBox/Checkbox';\r\nimport Button from '../SuperComponents/Button/Button';\r\nimport {path} from '../../App';\r\nimport ErrorSnackBar from '../ErrorSnackBar/ErrorSnackBar';\r\n\r\n\r\ntype LoginPropsType = {}\r\n\r\nconst Login: React.FC<LoginPropsType> = () => {\r\n    const dispatch = useDispatch()\r\n    let isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth)\r\n    let error = useSelector<RootStateType, string | null>(state => state.app.error)\r\n    let statusResponse = useSelector<RootStateType, string>(state => state.app.statusResponse)\r\n\r\n    let [email, setEmail] = useState<string>('')\r\n    let [password, setPassword] = useState<string>('')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n\r\n    let onclickEmail = (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)\r\n    let onclickPassword = (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)\r\n    let onclickCheckbox = (e: ChangeEvent<HTMLInputElement>) => setRememberMe(e.currentTarget.checked)\r\n\r\n    let onclickHandler = () => {\r\n        dispatch(getAuthUserData(email, password, rememberMe))\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={path.PROFILE}/>\r\n    }\r\n    return <div className={style.wrapper}>\r\n        <h1>Sign In</h1>\r\n        {error && <ErrorSnackBar errorMessage={error}/>}\r\n        <form className={style.loginForm}>\r\n            <Input type={'email'}\r\n                   placeholder={'Enter email'}\r\n                   onChange={onclickEmail}/>\r\n            <Input type={'password'}\r\n                   placeholder={'Password'}\r\n                   onChange={onclickPassword}/>\r\n            <Checkbox title={'Remember me'}\r\n                      onChange={onclickCheckbox}/>\r\n            <Button disabled={statusResponse === 'loading'} onClick={onclickHandler}> SIGN IN </Button>\r\n        </form>\r\n        <span>\r\n            <NavLink to={path.PASS_REC}> Forget password</NavLink>\r\n            <NavLink to={path.REG}> Registration </NavLink>\r\n        </span>\r\n\r\n    </div>\r\n};\r\n\r\nexport default Login;","import {Dispatch} from \"redux\";\r\nimport {registrationAPI} from \"../../Api/api-regestration\";\r\nimport {setAppErrorAC, setAppStatusAC} from './appReducer';\r\n\r\n\r\n//Types\r\ntype ActionsType = ReturnType<typeof setRegistrationAC>\r\n    | ReturnType<typeof setRedirectProfileAC>\r\n    | ReturnType<typeof setAppStatusAC>\r\n    | ReturnType<typeof setAppErrorAC>\r\ntype InitialStateType = {\r\n    password: string\r\n    email: string\r\n    isRedirect: boolean\r\n}\r\nexport type RegistrationRequestType = {\r\n    email: string\r\n    password: string\r\n}\r\nexport type RegistrationResponseType = {\r\n    addedUser: {\r\n        created: string\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        rememberMe: boolean\r\n        updated: string\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n}\r\nexport type ErrorResponseType = {\r\n    response: {\r\n        data: {\r\n            emailRegExp?: {}\r\n            error: string\r\n            email?: string\r\n            in: string\r\n            isEmailValid?: boolean\r\n            isPassValid?: boolean\r\n            passwordRegExp?: string\r\n        }\r\n    }\r\n}\r\n\r\n//InitialState\r\nconst initialState: InitialStateType = {\r\n    password: '',\r\n    email: '',\r\n    isRedirect: false,\r\n}\r\n\r\n//Reducer\r\nexport const registrationReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case 'SET-REGISTRATION':\r\n            return {...state, ...actions.regData}\r\n        case \"SET-REDIRECT-PROFILE\":\r\n            return {...state, isRedirect: actions.isRedirect}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const setRegistrationAC = (regData: RegistrationRequestType) => ({type: 'SET-REGISTRATION', regData} as const)\r\n\r\nexport const setRedirectProfileAC = (isRedirect: boolean) => ({type: 'SET-REDIRECT-PROFILE', isRedirect} as const)\r\n\r\n\r\n//Thunk\r\nexport const registrationTC = (regData: RegistrationRequestType) => (dispatch: Dispatch<ActionsType>) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    registrationAPI().registration({...regData})\r\n        .then((res) => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            const dataAboutUser = res.data.addedUser\r\n            // Если не происходит редирект после того как зарегались проблема ниже . Этот код считает длинну объекта ,всего там 10 ключей. Смотрел\r\n            if (Object.keys(dataAboutUser).length === 10) {\r\n                // debugger\r\n                dispatch(setRegistrationAC({...regData}))\r\n                dispatch(setRedirectProfileAC(true))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            }\r\n        })\r\n        .catch((error: ErrorResponseType) => {\r\n            dispatch(setAppStatusAC('loading'))\r\n            if (error.response.data.in === 'createUser') {\r\n                dispatch(setAppErrorAC(error.response.data.error))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n            if (!error.response.data.isEmailValid) {\r\n                dispatch(setAppErrorAC(error.response.data.error))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n            if (!error.response.data.isPassValid) {\r\n                error.response.data.passwordRegExp && dispatch(setAppErrorAC(error.response.data.passwordRegExp))\r\n                dispatch(setAppStatusAC('failed'))\r\n            }\r\n        })\r\n}\r\n\r\n","import {RegistrationRequestType, RegistrationResponseType} from \"../Redux/reducers/registrationReducer\";\r\nimport {instance} from \"./api\";\r\n\r\n\r\n//API\r\nexport const registrationAPI = () => {\r\n    return {\r\n        registration: (dataReg: RegistrationRequestType) => {\r\n            return instance.post<RegistrationResponseType>(`auth/register`, {...dataReg})\r\n        }\r\n    }\r\n}","import React, {ChangeEvent, useCallback, useState} from 'react';\r\nimport style from \"./Registration.module.css\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {path} from \"../../App\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"../../Redux/store\";\r\nimport {registrationTC} from \"../../Redux/reducers/registrationReducer\";\r\nimport {Input} from '../SuperComponents/Input/Input';\r\nimport Button from \"../SuperComponents/Button/Button\";\r\nimport ErrorSnackBar from \"../ErrorSnackBar/ErrorSnackBar\";\r\nimport {RequestStatusType} from \"../../Redux/reducers/appReducer\";\r\n\r\ntype RegistrationPropsType = {\r\n    statusApp:RequestStatusType\r\n}\r\n\r\nconst Registration: React.FC<RegistrationPropsType> = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('xranitelinadejd@gmail.com')\r\n    const [password, setPassword] = useState<string>('KOSTYA1234END.')\r\n    const isRedirectProfile = useSelector<RootStateType, boolean>(state => state.registration.isRedirect)\r\n    const error = useSelector<RootStateType, string | null>(state => state.app.error)\r\n\r\n    const onChangeHandlerEmail = useCallback((e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value), [])\r\n    const onChangeHandlerPassword = useCallback((e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value), [])\r\n\r\n    const onClickHandler = () => (dispatch(registrationTC({email, password})))\r\n\r\n    if (isRedirectProfile) {\r\n        return <Redirect to={path.PROFILE}/>\r\n    }\r\n\r\n    return <div className={style.wrapper}>\r\n        <h1>Registration</h1>\r\n        {error && <ErrorSnackBar errorMessage={error}/>}\r\n        <form className={style.registrForm}>\r\n            <Input type={'text'} value={email} onChange={onChangeHandlerEmail} placeholder={'Email'}/>\r\n            <Input type={'password'} value={password} onChange={onChangeHandlerPassword} placeholder={'Password'}/>\r\n            <Button onClick={onClickHandler} disabled={props.statusApp === 'loading'}> Registration </Button>\r\n        </form>\r\n    </div>\r\n};\r\n\r\nexport default Registration;","import style from './UserIsNotAuthorixed.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {path} from '../../App';\r\nimport React from 'react';\r\n\r\nconst UserIsNotAuthorized = () => {\r\n    return <div className={style.wrapper}>\r\n        <h1>Please, first </h1>\r\n        <NavLink to={path.LOGIN}> LogIn </NavLink>\r\n        <span> or </span>\r\n        <NavLink to={path.REG}> Registration </NavLink>\r\n    </div>\r\n}\r\nexport default UserIsNotAuthorized","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport {useSelector} from 'react-redux';\r\nimport {RootStateType} from '../../Redux/store';\r\nimport UserIsNotAuthorized from '../Login/UserIsNotAuthorized';\r\n\r\n\r\ntype ProfilePropsType = {}\r\n\r\nconst Profile: React.FC<ProfilePropsType> = () => {\r\n    //let profileData = useSelector<RootStateType, UserDataType | {}>(state => state.login.user)\r\n    let isAuth = useSelector<RootStateType, boolean>(state => state.login.isAuth)\r\n\r\n\r\n    return <div className={style.wrapper}>\r\n        {!isAuth ? <UserIsNotAuthorized/>\r\n            :\r\n            <h1>Profile</h1>}\r\n    </div>\r\n};\r\n\r\n\r\nexport default Profile;","import React, {ChangeEvent, useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {Button} from '../Button/Button';\r\nimport {Input} from '../Input/Input';\r\n\r\nimport s from './SendingForm.module.css';\r\n\r\ntype PropsType = {\r\n    formName: string\r\n    formDescription?: string\r\n    callback: (value1: string, value2?: string | undefined) => void\r\n    status?: string\r\n    inputPlaceholder?: string\r\n    inputType: string\r\n\r\n    buttonName: string\r\n    btnDisabled: boolean\r\n\r\n    navLinkPath?: string\r\n\r\n    restProps?: any\r\n}\r\n\r\nexport const SendingForm: React.FC<PropsType> = (\r\n    {\r\n        formName,\r\n        formDescription,\r\n\r\n        callback,\r\n        status,\r\n        inputPlaceholder,\r\n\r\n        inputType,\r\n        buttonName,\r\n        btnDisabled,\r\n\r\n        navLinkPath,\r\n\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const buttonOnClick = () => {\r\n        callback(value)\r\n        //clear local state field\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div className={s.formWrapper}>\r\n            <h1 className={s.pageName}>{formName}</h1>\r\n            <div className={s.inner}>\r\n                <h3 className={s.title}>{formDescription}</h3>\r\n                {\r\n                    status && <span className={s.statusMessage}>{status}</span>\r\n                }\r\n                <div className={s.recoveryForm}>\r\n                    <div className={s.fieldBlock}>\r\n                        <Input type={inputType}\r\n                               onEnter={buttonOnClick}\r\n                               value={value}\r\n                               placeholder={inputPlaceholder && inputPlaceholder}\r\n                               className={s.input}\r\n                               onChange={inputHandler}/>\r\n                        <Button onClick={buttonOnClick}\r\n                                disabled={btnDisabled}\r\n                                className={s.btn}>{buttonName}\r\n                        </Button>\r\n                        <NavLink to={navLinkPath ? navLinkPath : ''} className={s.loginLink}>Login</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import {instance} from './api';\r\n\r\n//Global response\r\nexport type APIResponseType<D = {}> = {\r\n    data: D\r\n    statusText: string\r\n}\r\n\r\n//Response types\r\nexport type PasswordRecoveryType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\nexport type SetNewPasswordType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport const passwordAPI = {\r\n    recover(email: string) {\r\n        return instance.post<APIResponseType<PasswordRecoveryType>>('auth/forgot', {\r\n            email: email,\r\n            from: 'test-front-admin <serega.kuharionok@yandex.ru>',\r\n            message: `<div style=\"background-color: #00ff00; padding: 15px\">\r\n                            password recovery link: \r\n                     <a href='http://localhost:3000/FridayProject#/newPassword/$token$'>Click</a>\r\n                     </div>`\r\n        });\r\n    },\r\n\r\n    resetPassword(password: string, token: string | undefined) {\r\n        return instance.post<APIResponseType<SetNewPasswordType>>('auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken: token\r\n        });\r\n    }\r\n}","import {path} from '../../App';\r\nimport React, {useEffect} from 'react';\r\nimport {RootStateType} from '../../Redux/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport ErrorSnackBar from '../ErrorSnackBar/ErrorSnackBar';\r\nimport {setAppErrorAC, setAppStatusAC} from '../../Redux/reducers/appReducer';\r\nimport {SendingForm} from '../SuperComponents/SendingForm/SendingForm';\r\nimport {resetPassword} from '../../Redux/reducers/resetPasswordThunks';\r\nimport ProgressBar from '../SuperComponents/ProgressBar/ProgressBar';\r\n\r\nimport s from './Password.module.css'\r\n\r\nexport const ResetPassword: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {token} = useParams<Record<string, string | undefined>>();\r\n    const history = useHistory();\r\n\r\n    const appStatus = useSelector<RootStateType, string>((state) => state.app.statusResponse)\r\n    const error = useSelector<RootStateType, string | null>((state) => state.app.error)\r\n\r\n    const tokenName = token ? token : ''\r\n\r\n    const resetOldPassword = (password: string) => {\r\n        dispatch(resetPassword(password, tokenName))\r\n\r\n    }\r\n\r\n    const redirect = () => {\r\n        history.push(path.LOGIN);\r\n    }\r\n\r\n    //redirect\r\n    if (appStatus === 'succeeded') {\r\n        setTimeout(redirect, 3000)\r\n    }\r\n\r\n    //clear status\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch(setAppStatusAC('idle'))\r\n            dispatch(setAppErrorAC(null))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.pageWrapper}>\r\n            {\r\n                appStatus === 'loading' && <ProgressBar/>\r\n            }\r\n            <SendingForm formName={'RESET PASSWORD'}\r\n                         formDescription={`Create a new, strong password that you don't use for other websites`}\r\n                         callback={resetOldPassword}\r\n                         inputPlaceholder={'enter your new password'}\r\n                         inputType={'password'}\r\n                         buttonName={'Reset'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={path.LOGIN}\r\n            />\r\n            {\r\n                error && <ErrorSnackBar errorMessage={error}/>\r\n            }\r\n        </div>\r\n    )\r\n}","import {Dispatch} from 'redux';\r\nimport {passwordAPI} from '../../Api/api-password';\r\nimport {setAppErrorAC, setAppStatusAC} from './appReducer';\r\n\r\n//Thunk\r\nexport const sendRecoveryEmail = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    passwordAPI.recover(email)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(setAppStatusAC('succeeded'))\r\n                dispatch(setAppErrorAC(`if account \"${email}\" exist, an email will be sent with further instruction`))\r\n            } else {\r\n                dispatch(setAppStatusAC('failed'))\r\n                dispatch(setAppErrorAC('Something went wrong:('))\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppStatusAC('failed'))\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n}\r\n\r\nexport const resetPassword = (password: string, token: string | undefined) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    passwordAPI.resetPassword(password, token)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(setAppStatusAC('succeeded'))\r\n                dispatch(setAppErrorAC('The password change is successful'))\r\n            } else {\r\n                dispatch(setAppStatusAC('failed'))\r\n                dispatch(setAppErrorAC('Something went wrong:('))\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setAppStatusAC('failed'))\r\n            dispatch(setAppErrorAC(error))\r\n        })\r\n}","import {path} from '../../App';\r\nimport React, {useEffect} from 'react';\r\nimport {RootStateType} from '../../Redux/store';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport ErrorSnackBar from '../ErrorSnackBar/ErrorSnackBar';\r\nimport {setAppErrorAC, setAppStatusAC} from '../../Redux/reducers/appReducer';\r\nimport ProgressBar from '../SuperComponents/ProgressBar/ProgressBar';\r\nimport {SendingForm} from '../SuperComponents/SendingForm/SendingForm';\r\nimport {sendRecoveryEmail} from '../../Redux/reducers/resetPasswordThunks';\r\n\r\nimport s from './Password.module.css'\r\n\r\nexport const PasswordRecovery: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const appStatus = useSelector<RootStateType, string>((state) => state.app.statusResponse)\r\n    const error = useSelector<RootStateType, string | null>((state) => state.app.error)\r\n\r\n    const sendEmail = (email: string) => {\r\n        dispatch(sendRecoveryEmail(email))\r\n    }\r\n\r\n    //clear status\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch(setAppStatusAC('idle'))\r\n            dispatch(setAppErrorAC(null))\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.pageWrapper}>\r\n            {\r\n                appStatus === 'loading' && <ProgressBar/>\r\n            }\r\n            <SendingForm formName={'RECOVERY PASSWORD'}\r\n                         formDescription={`Enter the email address you used to register and we'll send you the instruction`}\r\n                         callback={sendEmail}\r\n                         inputPlaceholder={'enter your email address'}\r\n                         inputType={'email'}\r\n                         buttonName={'Send'}\r\n                         btnDisabled={appStatus === 'loading'}\r\n                         navLinkPath={path.LOGIN}\r\n            />\r\n            {\r\n                error && <ErrorSnackBar errorMessage={error}/>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport NotFound from \"./Components/NotFound/NotFound\";\r\nimport NavBar from \"./Components/NavBar/NavBar\";\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport AllComponents from \"./AllComponents\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport Registration from \"./Components/Registration/Registration\";\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStateType} from \"./Redux/store\";\r\nimport ProgressBar from \"./Components/SuperComponents/ProgressBar/ProgressBar\";\r\nimport {RequestStatusType} from \"./Redux/reducers/appReducer\";\r\nimport {ResetPassword} from './Components/Password/ResetPassword';\r\nimport {PasswordRecovery} from './Components/Password/PasswordRecovery';\r\n\r\n\r\nexport const path = {\r\n    LOGIN: '/login',\r\n    REG: '/registration',\r\n    PASSWORD: '/newPassword/:token?',\r\n    PASS_REC: '/passwordRecovery',\r\n    PROFILE: '/profile',\r\n    ALL_COMPONENTS: '/allComponents',\r\n}\r\n\r\nfunction App() {\r\n\r\n    const statusApp = useSelector<RootStateType, RequestStatusType>(state => state.app.statusResponse)\r\n// debugger\r\n    return <div>\r\n        <NavBar/>\r\n        {statusApp === 'loading' ? <ProgressBar/> : null}\r\n        {/* Switch нужен чтобы в url адрессе отображалось только то что нужно(＾▽＾)*/}\r\n        <Switch>\r\n            <Route path={'/'} exact render={() => <AllComponents/>}/>\r\n            <Route path={path.LOGIN} exact render={() => <Login/>}/>\r\n            <Route path={path.REG} exact render={() => <Registration statusApp={statusApp}/>}/>\r\n            <Route path={path.PASSWORD} exact render={() => <ResetPassword/>}/>\r\n            <Route path={path.PASS_REC} exact render={() => <PasswordRecovery/>}/>\r\n            <Route path={path.PROFILE} exact render={() => <Profile/>}/>\r\n            <Route path={path.ALL_COMPONENTS} exact render={() => <AllComponents/>}/>\r\n            {/*Отрисуется в случае если не один url не подойдет (´｡• ᵕ •｡)*/}\r\n            <Route path={'/404'} render={() => <NotFound/>}/>\r\n            <Redirect from={'*'} to={'/404'}/>\r\n        </Switch>\r\n\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const initialState: InitialStateType = {}\r\n\r\nexport const profileReducer = (state = initialState, actions: ActionsType): InitialStateType => {\r\n    switch (actions.type) {\r\n        case '':\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nexport const profileAC = () => ({type:''} as const )\r\n\r\n//Types\r\ntype ActionsType = ReturnType<typeof profileAC>\r\n\r\ntype InitialStateType = {}\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {loginReducer} from './reducers/loginReducer';\r\nimport {registrationReducer} from './reducers/registrationReducer';\r\nimport {profileReducer} from './reducers/profileReducer';\r\nimport thunk from 'redux-thunk';\r\nimport {appReducer} from './reducers/appReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    login: loginReducer,\r\n    registration:registrationReducer,\r\n    profile:profileReducer,\r\n    app:appReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {store} from \"./Redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        {/*HashRouter используем для статических серверов типо GH-pages. BrowserRouter для сервера который отвечает на запросы*/}\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}